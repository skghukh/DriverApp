package com.rodafleets.app.controller;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.rodafleets.app.config.AppConfig;
import com.rodafleets.app.dataaccess.VehicleRepository;
import com.rodafleets.app.dataaccess.VehicleTypeRepository;
import com.rodafleets.app.model.Vehicle;
import com.rodafleets.app.model.VehicleType;
import com.rodafleets.app.response.CustomResponse;

@RestController    // This means that this class is a Controller
@RequestMapping(path="/" + AppConfig.API_VERSION)
public class DefaultController {

	private static final Logger log = LoggerFactory.getLogger(DriverController.class);
	private CustomResponse jsonResponse;

	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private VehicleTypeRepository vehicleTypeRepo;
	/*
	 * 
	 * @Url: localhost:8080/termsandconditions
	 */
	@RequestMapping(value = "/termsandconditions", method = RequestMethod.GET)
	public ResponseEntity<?> getTermsAndConditions() {
		return null;
	}
	
	/*
	 * Retrive all vehicle types for client	
	 * @Url: localhost:8080/vehicles/types
	 */
	@RequestMapping(value = "/vehicle/types", method = RequestMethod.GET)
	public ResponseEntity<?> getVehicleTypes() {
		return findVehicleTypes();
	}
	
	private ResponseEntity<?> findVehicleTypes() {
		jsonResponse = new CustomResponse();
		List<VehicleType> vehicleTypes = vehicleTypeRepo.findAll();

		if(vehicleTypes.isEmpty()) {
			jsonResponse.setCode(HttpStatus.NO_CONTENT.value());
			jsonResponse.setMessage("Unable to retrieve vehicle types from backend.");
			return new ResponseEntity<CustomResponse>(jsonResponse, HttpStatus.OK);
		}	    

		return new ResponseEntity<List>(vehicleTypes, HttpStatus.OK);
	}
}
